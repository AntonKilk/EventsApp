@model AddParticipantViewModel

@{
    ViewData["Title"] = "Osavõtja lisamine";
}

<h2>@ViewData["Title"]</h2>

<form asp-action="AddParticipantToEvent" asp-controller="Participants">
    <input type="hidden" name="eventId" value="@Model.EventId" />

    <div class="form-group">
        <label>Isik / Üritus</label>
        <select id="participantType" name="participantType" class="form-control">
            <option value="">-- Vali --</option>
            <option value="Person">Isik</option>
            <option value="Company">Üritus</option>
        </select>
    </div>

    <div id="personFields" style="display:none;">
        <div class="form-group">
            <label>Eesnimi</label>
            <input id="firstName" type="text" name="FirstName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Perekonnanimi</label>
            <input id="lastName" type="text" name="LastName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Isikukood</label>
            <input id="personalCodeInput" type="text" name="PersonalCode" class="form-control" />
        </div>
        <div class="form-group">
            <label>Maksmise viis</label>
            <select id="paymentMethod" name="PaymentMethod" class="form-control">
                <option value="BankTransfer">Pangaülekanne</option>
                <option value="Cash">Sularaha</option>
            </select>
        </div>
        <div class="form-group">
            <label>Lisainfo</label>
            <textarea name="AdditionalInformation" class="form-control" maxlength="1500"></textarea>
        </div>
    </div>

    <div id="companyFields" style="display:none;">
        <div class="form-group">
            <label>Ettevõtte juriidiline nim</label>
            <input id="companyName" type="text" name="Name" class="form-control" />
        </div>
        <div class="form-group">
            <label>Ettevõtte registrikood</label>
            <input id="companyRegistrationCode" type="text" name="CompanyRegistrationCode" class="form-control" />
        </div>
        <div class="form-group">
            <label>Ettevõttest tulevate osavõtjate arv</label>
            <input id="numberOfParticipants" type="number" name="NumberOfParticipants" class="form-control" />
        </div>
        <div class="form-group">
            <label>Maksmise viis</label>
            <select name="PaymentMethod" class="form-control">
                <option value="BankTransfer">Pangaülekanne</option>
                <option value="Cash">sularaha</option>
            </select>
        </div>
        <div class="form-group">
            <label>Lisainfo</label>
            <textarea name="AdditionalInformation" class="form-control" maxlength="5000"></textarea>
        </div>
    </div>

    <button id="addParticipantBtn" type="submit" class="btn btn-primary">Lisa</button>
</form>

<script>
    document.getElementById('participantType').addEventListener('change', function () {
        var showPerson = this.value === 'Person';
        document.getElementById('personFields').style.display = showPerson ? '' : 'none';
        document.getElementById('companyFields').style.display = showPerson ? 'none' : '';
    });
</script>

<!-- Fields validation -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const participantTypeSelect = document.getElementById('participantType');
        const addParticipantBtn = document.getElementById('addParticipantBtn');
        const firstName = document.getElementById('firstName');
        const lastName = document.getElementById('lastName');
        const personalCodeInput = document.getElementById('personalCodeInput');
        const paymentMethod = document.getElementById('paymentMethod');
        const companyName = document.getElementById('companyName');
        const companyRegistrationCode = document.getElementById('companyRegistrationCode');
        const numberOfParticipants = document.getElementById('numberOfParticipants');

        // Function to check if all required fields are filled and the ID is valid
        function checkFields() {
            let fieldsFilled = false;
            let isValidId = false;
            if (participantTypeSelect.value === 'Person') {
                fieldsFilled = firstName.value.trim() && lastName.value.trim() && personalCodeInput.value.trim() && paymentMethod.value;
                isValidId = isValidEstonianId(personalCodeInput.value);
            } else if (participantTypeSelect.value === 'Company') {
                fieldsFilled = companyName.value.trim() && companyRegistrationCode.value.trim() && numberOfParticipants.value.trim() && paymentMethod.value;
                isValidId = true; 
            }
            addParticipantBtn.disabled = !(fieldsFilled && isValidId);
        }

        // Check fields on input or change
        [firstName, lastName, personalCodeInput, paymentMethod, companyName, companyRegistrationCode, numberOfParticipants, participantTypeSelect].forEach(element =>
            element.addEventListener('input', checkFields));

        participantTypeSelect.addEventListener('change', function () {
            document.getElementById('personFields').style.display = this.value === 'Person' ? '' : 'none';
            document.getElementById('companyFields').style.display = this.value === 'Company' ? '' : 'none';
            checkFields(); // Recheck whenever the participant type changes
        });

        // Initial check in case of autofill or preset values
        checkFields();
    });
</script>

<!-- Function to validate Estonian ID code -->
<script>
function isValidEstonianId(id) {
    if (!/^\d{11}$/.test(id)) return false;

    // Weight arrays for checksum calculation
    const firstWeights = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1];
    const secondWeights = [3, 4, 5, 6, 7, 8, 9, 1, 2, 3];

    // Calculate checksums
    const calculateChecksum = (weights) =>
        id
            .substring(0, 10)
            .split('')
            .reduce((sum, current, index) => sum + parseInt(current, 10) * weights[index], 0) % 11;

    let checksum = calculateChecksum(firstWeights);

    // If first checksum calculation equals 10, recalculate using second weight array
    if (checksum === 10) {
        checksum = calculateChecksum(secondWeights);
        // If second calculation also equals 10, checksum is 0
        checksum = checksum === 10 ? 0 : checksum;
    }

    // Compare calculated checksum to the last digit of the ID
    return checksum === parseInt(id[10], 10);
}
</script>

<!-- Add red border to ID field if ID is not valid -->
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var personalCodeInput = document.getElementById('personalCodeInput');

        personalCodeInput.addEventListener('input', function () {
            var isValid = isValidEstonianId(this.value);

            if (!isValid) {
                this.style.borderColor = 'red';
            } else {
                this.style.borderColor = ''; 
            }
        });
    });
</script>